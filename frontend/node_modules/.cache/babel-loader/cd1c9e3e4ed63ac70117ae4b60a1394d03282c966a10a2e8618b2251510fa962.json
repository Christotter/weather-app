{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevOps\\\\weather-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [hottestLocation, setHottestLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fonction pour récupérer la localisation la plus chaude depuis le backend\n  const getHottestLocation = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/hottest-location');\n      const data = await response.json();\n      setHottestLocation(data);\n    } catch (error) {\n      setError(\"Failed to fetch data.\");\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getHottestLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hottest Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hottestLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"The hottest location is \", hottestLocation.name, \" (\", hottestLocation.country, \") with a temperature of \", hottestLocation.temperature, \"\\xB0C.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f4+p/a7pzaJZ46/XcZdAjuF4K30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","hottestLocation","setHottestLocation","loading","setLoading","error","setError","getHottestLocation","response","fetch","data","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","country","temperature","_c","$RefreshReg$"],"sources":["D:/DevOps/weather-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [hottestLocation, setHottestLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fonction pour récupérer la localisation la plus chaude depuis le backend\n  const getHottestLocation = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:3001/api/hottest-location');\n      const data = await response.json();\n      setHottestLocation(data);\n    } catch (error) {\n      setError(\"Failed to fetch data.\");\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getHottestLocation();\n  }, []);\n\n  return (\n    <div>\n      <h1>Hottest Location</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        <div>\n          {hottestLocation && (\n            <div>\n              <h2>\n                The hottest location is {hottestLocation.name} ({hottestLocation.country}) with a\n                temperature of {hottestLocation.temperature}°C.\n              </h2>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MAC1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,kBAAkB,CAACQ,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,QAAQ,CAAC,uBAAuB,CAAC;MACjCM,OAAO,CAACP,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBd,OAAO,gBACNL,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACfZ,KAAK,gBACPP,OAAA;MAAAe,QAAA,EAAIR;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEdnB,OAAA;MAAAe,QAAA,EACGZ,eAAe,iBACdH,OAAA;QAAAe,QAAA,eACEf,OAAA;UAAAe,QAAA,GAAI,0BACsB,EAACZ,eAAe,CAACiB,IAAI,EAAC,IAAE,EAACjB,eAAe,CAACkB,OAAO,EAAC,0BAC1D,EAAClB,eAAe,CAACmB,WAAW,EAAC,QAC9C;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}