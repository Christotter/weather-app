{"ast":null,"code":"var _jsxFileName = \"D:\\\\DevOps\\\\weather-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [hottestLocation, setHottestLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const locations = [{\n    name: \"Paris\",\n    lat: 48.8566,\n    lon: 2.3522\n  }, {\n    name: \"New York\",\n    lat: 40.7128,\n    lon: -74.0060\n  }, {\n    name: \"Tokyo\",\n    lat: 35.6895,\n    lon: 139.6917\n  }, {\n    name: \"Sydney\",\n    lat: -33.8688,\n    lon: 151.2093\n  }];\n  const fetchTemperature = async (lat, lon) => {\n    try {\n      const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true`);\n      const data = await response.json();\n      return data.current_weather.temperature;\n    } catch (error) {\n      console.error(\"Error fetching temperature:\", error);\n      return null;\n    }\n  };\n  const getHottestLocation = useCallback(async () => {\n    try {\n      setLoading(true);\n      const temperatures = await Promise.all(locations.map(async location => {\n        const temp = await fetchTemperature(location.lat, location.lon);\n        return {\n          name: location.name,\n          temperature: temp\n        };\n      }));\n\n      // Filtrer les lieux avec des températures valides\n      const validTemperatures = temperatures.filter(item => item.temperature !== null);\n\n      // Trouver la température la plus élevée\n      const hottest = validTemperatures.reduce((max, current) => current.temperature > max.temperature ? current : max, validTemperatures[0]);\n      setHottestLocation(hottest);\n    } catch (error) {\n      setError(\"Failed to fetch data.\");\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Le tableau vide signifie que `getHottestLocation` ne dépend d'aucune variable externe\n\n  useEffect(() => {\n    getHottestLocation();\n  }, [getHottestLocation]); // Ajoutez `getHottestLocation` comme dépendance\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hottest Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : hottestLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The hottest location is \", hottestLocation.name, \" with a temperature of \", hottestLocation.temperature, \"\\xB0C.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ho78D7ZmWor7E5akSZw8MfEYIz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","hottestLocation","setHottestLocation","loading","setLoading","error","setError","locations","name","lat","lon","fetchTemperature","response","fetch","data","json","current_weather","temperature","console","getHottestLocation","temperatures","Promise","all","map","location","temp","validTemperatures","filter","item","hottest","reduce","max","current","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DevOps/weather-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst App = () => {\n  const [hottestLocation, setHottestLocation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const locations = [\n    { name: \"Paris\", lat: 48.8566, lon: 2.3522 },\n    { name: \"New York\", lat: 40.7128, lon: -74.0060 },\n    { name: \"Tokyo\", lat: 35.6895, lon: 139.6917 },\n    { name: \"Sydney\", lat: -33.8688, lon: 151.2093 }\n  ];\n\n  const fetchTemperature = async (lat, lon) => {\n    try {\n      const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current_weather=true`);\n      const data = await response.json();\n      return data.current_weather.temperature;\n    } catch (error) {\n      console.error(\"Error fetching temperature:\", error);\n      return null;\n    }\n  };\n\n  const getHottestLocation = useCallback(async () => {\n    try {\n      setLoading(true);\n      const temperatures = await Promise.all(\n        locations.map(async (location) => {\n          const temp = await fetchTemperature(location.lat, location.lon);\n          return { name: location.name, temperature: temp };\n        })\n      );\n\n      // Filtrer les lieux avec des températures valides\n      const validTemperatures = temperatures.filter(item => item.temperature !== null);\n\n      // Trouver la température la plus élevée\n      const hottest = validTemperatures.reduce((max, current) => (current.temperature > max.temperature ? current : max), validTemperatures[0]);\n\n      setHottestLocation(hottest);\n    } catch (error) {\n      setError(\"Failed to fetch data.\");\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Le tableau vide signifie que `getHottestLocation` ne dépend d'aucune variable externe\n\n  useEffect(() => {\n    getHottestLocation();\n  }, [getHottestLocation]); // Ajoutez `getHottestLocation` comme dépendance\n\n  return (\n    <div>\n      <h1>Hottest Location</h1>\n      {loading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        hottestLocation && (\n          <div>\n            <p>The hottest location is {hottestLocation.name} with a temperature of {hottestLocation.temperature}°C.</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}